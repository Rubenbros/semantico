<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
  <dc:creator>Pascual Latorre, Kilian Nicolás</dc:creator>
  <dc:creator>Montano Gella, Luis</dc:creator>
  <dc:creator>Villarroel Salcedo, José Luis</dc:creator>
  <dc:title>Planificación de misiones y navegación autónoma de un quadcopter</dc:title>
  <dc:identifier>http://zaguan.unizar.es/record/48502</dc:identifier>
  <dc:publisher>Universidad de Zaragoza</dc:publisher>
  <dc:date>2016</dc:date>
  <dc:description>Se ha realizado el diseño e implementación de un sistema de navegación autónoma y el control de misión para un UAV, en este caso un quadcopter, que permite al usuario definir waypoints que serán seguidos por el quadrotor sin necesitar la intervención de un piloto. Estos waypoints se podrán agrupar como un plan de vuelo que se ejecutarán de forma autónoma, efectuando incluso las maniobras de despegue y aterrizaje. El sistema de navegación actúa sobre el autopiloto del quadcopter, que es el encargado de su estabilización. Se ha desarrollado un generador de trayectorias para controlar el movimiento en los tres ejes del espacio XYZ, y los ángulos roll, pitch, yaw, que permite controlar la posición del quadrotor en el espacio. También mediante este generador, se controlan las velocidades y aceleraciones máximas realizadas. Se han hecho simulaciones en tres dimensiones del sistema en Matlab para comprobar el correcto funcionamiento del planificador de misiones y la generación de trayectorias, utilizando para ello modelos aproximados de la dinámica del quadrotor. La implementación de la navegación autónoma y la planificación de misiones se ha realizado en el dsp F2812 de Texas Instruments, utilizando para ello el sistema operativo de tiempo real SYS/BIOS proporcionado en el entorno de desarrollo Code Composer Studio. Dentro de este sistema de tiempo real, se han integrado y calibrado los sensores para conseguir un óptimo funcionamiento del sistema en los entornos en los que operará el quadcopter.  Tras la implementación de todo el hardware y el desarrollo del software, se han efectuado pruebas en el laboratorio para comprobar el funcionamiento del quadrotor, consiguiendo llevar a cabo el despegue y aterrizaje de modo controlado y la estabilización de la orientación.</dc:description>
  <dc:format>pdf</dc:format>
  <dc:language>spa</dc:language>
  <dc:type>info:eu-repo/semantics/bachelorThesis</dc:type>
  <dc:rights>by-nc-sa</dc:rights>
  <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
</oai_dc:dc>