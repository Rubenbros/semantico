<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
  <dc:creator>Sangüesa Pérez, Diego</dc:creator>
  <dc:creator>Mahulea, Cristian</dc:creator>
  <dc:title>Implementación de algoritmo de control Pure Pursuit en robots móviles ARDUINO y comparación con otros algoritmos existentes</dc:title>
  <dc:identifier>http://zaguan.unizar.es/record/64049</dc:identifier>
  <dc:publisher>Universidad de Zaragoza</dc:publisher>
  <dc:date>2017</dc:date>
  <dc:description>La integración de robots móviles en diversos ámbitos, como el industrial o el doméstico, es de gran importancia, ya que éstos facilitan la realización de ciertas tareas para las cuales en otro caso sería necesaria la presencia de una persona. Además, esto puede reportar importantes beneficios como un ahorro de tiempo, de personal o de esfuerzo, o incluso mejoras en la precisión, el rendimiento o la productividad. Este tipo de robots poseen un método de control que les permite seguir una trayectoria calculada a partir de la información recibida por diversos sensores. Uno de los métodos de control más utilizados, debido a su simplicidad y a los buenos resultados que aporta es el Pure Pursuit, que además sirve de base para el desarrollo de métodos más complejos. Este trabajo consiste en la implementación de un controlador del tipo Pure Pursuit en robots móviles Arduino. Para ello se ha trabajado con una plataforma ubicada en uno de los laboratorios del edicio Ada Byron que fue desarrollada por otro estudiante en su Trabajo de Fin de Máster. En primer lugar se ha estudiado el funcionamiento de los controles del tipo Pure Pursuit, y posteriormente se ha decidido la mejor forma de adaptar un controlador de este tipo a los robots de la plataforma citada anteriormente. Se ha escrito y depurado el código del algoritmo, eliminando todos los fallos y defectos aparecidos y adaptándolo para su adecuado funcionamiento junto con las necesidades de la plataforma. Una vez escrito el código, se han ajustado los parámetros del control a los valores más adecuados mediante experimentación, hasta obtener un comportamiento del robot lo más próximo posible al deseado. Asimismo, se ha utilizado el software Matlab para la simulación del comportamiento del robot en diferentes escenarios, variando diferentes parámetros de funcionamiento y simulando también dichos escenarios con un control del tipo PI a fin de comparar ambos métodos.</dc:description>
  <dc:format>pdf</dc:format>
  <dc:language>spa</dc:language>
  <dc:type>info:eu-repo/semantics/bachelorThesis</dc:type>
  <dc:rights>by-nc-sa</dc:rights>
  <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
</oai_dc:dc>