<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
  <dc:creator>Jarne Brun, Jorge</dc:creator>
  <dc:creator>Montijano Muñoz, Eduardo</dc:creator>
  <dc:creator>Sagüés Blázquiz, Carlos</dc:creator>
  <dc:title>Navegación y control de sistema multirobot</dc:title>
  <dc:identifier>http://zaguan.unizar.es/record/64164</dc:identifier>
  <dc:publisher>Universidad de Zaragoza</dc:publisher>
  <dc:date>2017</dc:date>
  <dc:description>El uso de robots cada vez es más común en tareas de navegación y exploración, debido a su eficiencia y seguridad. La idea de usar un conjunto de robots en lugar de uno solo mejora notablemente estas tareas, debido a un gran ahorro de tiempo. Sin embargo, la utilización de múltiples robots complica considerablemente el problema de la navegación. Por un lado, la cantidad de variables a controlar aumenta linealmente con el número de robots. Por otro lado, es necesario calcular las trayectorias que deben seguir todas estas variables. Todo esto sin descuidar los problemas relacionados con la localización de cada robot dentro del entorno. El objetivo de este trabajo es proponer una solución conjunta a todos estos problemas, de tal manera que un equipo de robots pueda navegar de forma segura en entornos reales con obstáculos.  Para resolver el problema de planificación, en el trabajo se ha hecho uso de una abstracción que englobe al conjunto de robots. De esta manera se ha conseguido mantener el número de variables en la planificación constante e independiente del número de robots. En el TFG se ha evaluado esta técnica utilizando mapas sintéticos y mapas reales calculados utilizando un algoritmo de SLAM (Simultaneous Localization and Mapping). Para el control individual de cada robot dentro de la abstracción se ha utilizado un algoritmo de cobertura basado en particiones de Voronoi. Este control requiere las ubicaciones de cada robot, por lo que se han analizado diferentes técnicas de localización, utilizando un método basado en filtros de partículas. Todos estos métodos se han integrado en el software standard de robótica llamado ROS (Robot Operating System), que ha facilitado la comunicación con los robots y el control de los dispositivos a bajo nivel de éstos. La integración de todos los algoritmos dentro de este framework ha requerido el desarrollo de elementos de comunicación entre diferentes aplicaciones. Por último, se han realizado experimentos donde se han probado diferentes trayectorias tanto en entornos simulados realistas como con robots reales en un entorno con obstáculos. En ambos casos se ha logrado que los robots sigan la trayectoria planificada con un movimiento uniforme en formación y evitando colisiones entre sí y con el entorno.</dc:description>
  <dc:format>pdf</dc:format>
  <dc:language>spa</dc:language>
  <dc:type>info:eu-repo/semantics/bachelorThesis</dc:type>
  <dc:rights>by-nc-sa</dc:rights>
  <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
</oai_dc:dc>