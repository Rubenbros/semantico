<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
  <dc:creator>Del​más Las​corz, Alberto</dc:creator>
  <dc:creator>Resano Ezcaray, Jesús Javier</dc:creator>
  <dc:title>Diseño e implementación de un procesador hardware específico para el juego Blokus Duo</dc:title>
  <dc:identifier>http://zaguan.unizar.es/record/31467</dc:identifier>
  <dc:publisher>Universidad de Zaragoza</dc:publisher>
  <dc:date>2014</dc:date>
  <dc:description>En el contexto de la competición de diseño del congreso ICFPT 2013, la Universidad de Zaragoza presentó un diseño de un procesador específico de inteligencia artificial para el juego de mesa Blokus Duo. En Diciembre de 2014 la competición vuelve a celebrarse y el objetivo de este proyecto es mejorar el diseño de dicho procesador, que se implementa sobre una FPGA (circuito integrado programable). Para ello en primera instancia se han investigado las técnicas empleadas por las inteligencias artificiales más efectivas para este tipo de juego (principalmente el software Pentobi), considerando cuáles podrían ser aprovechadas. También se ha mejorado el diseño hardware inicial aprovechando al máximo el paralelismo a la hora de procesar los tableros. Además se ha actualizado la versión software (que se utilizó el año pasado para diseñar y probar el algoritmo de inteligencia artificial) incluyendo algunas mejoras de las que solo disponía el hardware hasta ahora. Para agilizar la investigación de mejoras del diseño se crearon herramientas para automatizar tareas repetitivas, permitiendo enfrentar el diseño contra diferentes versiones de si mismo así como contra otros adversarios, y recoger estadísticas de un gran número de partidas sin interacción humana. Se han desarrollado estrategias para acelerar la búsqueda, implementándolas en la versión software para comprobar su efectividad antes de efectuar la implementación (más costosa) en el hardware. Estas estrategias fueron sopesadas teniendo en cuenta su idoneidad para el diseño hardware, y consiguieron una mejora de velocidad  de más de un orden de magnitud. Finalmente se han investigado otras formas de mejorar la inteligencia sin aumentar el espacio de búsqueda, adaptando ideas de otras implementaciones a los requisitos específicos del diseño hardware (como por ejemplo  las restricciones de memoria y cantidad de tiempo fija). Estas mejoras incrementaron la efectividad de la inteligencia artificial significativamente. El resultado de todo este trabajo es un diseño que funciona entre 10 y 100 veces más rápido que la versión inicial y con algoritmos de inteligencia artificial más potentes que le permiten evaluar mejor las situaciones que se dan durante la partida. Este diseño es competitivo cuando juega contra las mejores aplicaciones software para este juego incluso aunque estas se  ejecuten en plataformas  mucho más rápidas, con muchos más recursos de memoria, y con un consumo energético varias veces superior. Como resultado adicional cabe destacar que un artículo redactado sobre las mejoras hardware del diseño realizado fue seleccionado, tras un proceso de revisión por pares, por el congreso ICFPT para la publicación en sus actas.</dc:description>
  <dc:format>pdf</dc:format>
  <dc:language>spa</dc:language>
  <dc:type>info:eu-repo/semantics/bachelorThesis</dc:type>
  <dc:rights>by-nc-sa</dc:rights>
  <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
</oai_dc:dc>