<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
  <dc:creator>Villarroya Sanz, Alejandro</dc:creator>
  <dc:creator>Martínez Montiel, José María</dc:creator>
  <dc:creator>Barragán Pérez, Luis Ángel</dc:creator>
  <dc:title>Control de velocidad con microcontrolador de un motor de continua</dc:title>
  <dc:identifier>http://zaguan.unizar.es/record/60804</dc:identifier>
  <dc:publisher>Universidad de Zaragoza</dc:publisher>
  <dc:date>2017</dc:date>
  <dc:description>En el presente trabajo de fin de grado se van a exponer los diferentes pasos que conciernen al control de velocidad de un motor de continua con microcontrolador. Para esto será necesario el montaje de un circuito electrónico que permita el control del motor en primer lugar. Una vez se ha estudiado el funcionamiento y programación del microcontrolador MSP432, dispositivo que realizará tanto el control del sistema como el cálculo de la velocidad del motor, se comienza a analizar los métodos más adecuados a la hora de medir la velocidad del motor. Exponiendo sus problemas y virtudes en lo que a este cálculo se refiere. Se tendrán en consideración tanto los ajustes de resolución que puedan derivarse de un ajuste óptimo del sensor, que en este caso será el encoder acoplado al eje del motor, como de los recursos de que dispone el MSP432 ya sean fuentes de reloj, ajustes de los timer, tiempo de muestreo, etc. Una vez hecho esto, se procede a la identificación del modelo matemático que rige el comportamiento del motor ante una entrada de tipo escalón. Para esto se analizará visualmente este comportamiento en una GUI que previamente se habrá analizado y que permitirá afinar esta identificación.  A continuación se explicarán características del nuevo MSP432, su funcionamiento, su arquitectura, la unidad de coma flotante y la importancia que cobra para este proyecto con sus características. Más adelante se explican las fuentes de reloj disponibles, sus rangos de trabajo, la elección de las mismas y cuál ha sido el ajuste concreto para el fin que se expone. Asimismo se explicarán los temporizadores disponibles para este microcontrolador, las opciones de ajuste que proporcionan sus registros de captura y comparación, y de nuevo el ajuste de los mismos para este trabajo. Como parte que incluye la arquitectura de los modelos ARM viene incorporado el nuevo modo de procesar y ordenar las interrupciones lo que se explicará en detalle junto con las necesidades que se cubren con el correcto ajuste de las interrupciones y los registros de prioridad para las mismas. Tras estudiar opciones para hacer uso de un programa que permita crear una GUI se explicará el mismo, las opciones que ofrece y los recursos utilizados. Todo ello, con el objetivo de ofrecer respuesta visual a la respuesta del motor y tener un mayor control sobre el comportamiento del sistema, así como de los datos obtenidos. Además se estudiará la posibilidad de hacer funcionar el programa fuera del entorno de programación.  El diseño de un controlador digital se realizará mediante la herramienta de software libre elegida. A continuación este diseño se simulará y se explicarán las características de este diseño, así como la implementación de alguna mejora para el controlador. Una vez hecha la simulación se implementará el controlador en C y se verificarán experimentalmente los resultados simulados, mostrando finalmente el funcionamiento del controlador en diversas etapas. Como último apartado se procederá a sacar las conclusiones pertinentes y las posibles líneas de trabajo futuro a modo de propuesta.</dc:description>
  <dc:format>pdf</dc:format>
  <dc:language>spa</dc:language>
  <dc:type>info:eu-repo/semantics/bachelorThesis</dc:type>
  <dc:rights>by-nc-sa</dc:rights>
  <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
</oai_dc:dc>