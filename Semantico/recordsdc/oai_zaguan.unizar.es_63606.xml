<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
  <dc:creator>Herguedas Gastón, Rafael</dc:creator>
  <dc:creator>López Nicolás, Gonzalo</dc:creator>
  <dc:creator>Sagüés Blázquiz, Carlos</dc:creator>
  <dc:title>Sistema de navegación autónoma de un dirigible</dc:title>
  <dc:identifier>http://zaguan.unizar.es/record/63606</dc:identifier>
  <dc:publisher>Universidad de Zaragoza</dc:publisher>
  <dc:date>2017</dc:date>
  <dc:description>Este Trabajo Final de Máster tiene por objeto el estudio del control del movimiento de un VANT (Vehículo Aéreo No Tripulado) comercial de tipo dirigible (blimp). Se ha abordado para ello el diseño de un sistema de navegación autónomo, de bajo coste, que permite gobernar un dirigible de pequeño tamaño para alcanzar la posición deseada.El dirigible estudiado consiste en un globo fusiforme inflado con gas helio al cual se acopla una góndola con los actuadores y material de lastre en la parte inferior. Los actuadores son tres motores eléctricos que permiten desplazar el dirigible en las tres dimensiones del espacio. Para controlar el movimiento del dirigible se han planteado un algoritmo de control cinemático proporcional al error de posición y un sistema de control dinámico en espacio de estados con integradores y estimador de estado. El control en espacio de estados se ha simulado con el software Matlab. El desarrollo del sistema de navegación se ha llevado a cabo, principalmente, en la plataforma de software open source Rasberry Pi versión 3 por medio del lenguaje de programación Python 2.7. Sobre esta plataforma se ha implementado el sensor de medida del movimiento del dirigible, que en este caso ha consistido en una cámara de 5 megapíxeles, así como la interfaz de emisión de infrarrojos necesaria para transmitir las señales a los actuadores. Con el propósito de imitar a conveniencia las señales infrarrojas que emite el mando proporcionado con el dirigible se ha hecho uso de la librería de software libre para Linux LIRC, con la cual es posible guardar en memoria las señales emitidas y poder reproducirlas a posteriori. Para mejorar las prestaciones del sistema de comunicación, se ha optado finalmente por el módulo pigpio de Python. Por último, para optimizar el proceso de reconocimiento visual del dirigible, se ha hecho uso también de las librerías de software libre OpenCV y Aruco, que proporcionan una serie de marcadores visuales y funciones con las que realizar las tareas de calibración de la cámara, adquisición y tratamiento de los datos de forma altamente eficiente. Estas librerías se han instalado igualmente en la placa Rasberry Pi.</dc:description>
  <dc:format>pdf</dc:format>
  <dc:language>spa</dc:language>
  <dc:type>info:eu-repo/semantics/masterThesis</dc:type>
  <dc:rights>by-nc-sa</dc:rights>
  <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
</oai_dc:dc>